{"ast":null,"code":"var _jsxFileName = \"/Users/benajasandrain/codeLabs/meetingground/mg-app/src/pages/signup.tsx\";\n\n/*users.jsx*/\nimport React from \"react\"; //You have to use the link component to link between you pages\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst SignUpPage = () => {\n  //const id = this.props.match.params.id  ;//this.props.match.params.id;\n  const id = 1;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_HOSTS);\n  return loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"loading\") : error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"An Error occured\") : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, data.host.map(host => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, host.email, \" used by \", host.firstname, \" \", host.lastname))); // (\n  // <Query query={query} variables={{id}} >\n  // {\n  //     (({loading, err, data}) => {\n  //         if(loading) return <div>loading</div>\n  //         return (\n  //             <div>{data.movieInfo.title}</div>\n  //         )\n  //     })\n  // }\n  // </Query>\n  // )\n  // return (\n  //   <div>\n  //     <h3> 404 Not Found!</h3>\n  //     <Link to=\"/\">Main Page</Link>\n  //   </div>\n  // );\n};\n\nconst GET_ALL_HOSTS = gql`\n  query {\n    host {\n      email\n      firstname\n      lastname\n    }\n  }\n`;\nexport default SignUpPage;","map":{"version":3,"sources":["/Users/benajasandrain/codeLabs/meetingground/mg-app/src/pages/signup.tsx"],"names":["React","gql","useQuery","SignUpPage","id","loading","error","data","GET_ALL_HOSTS","host","map","email","firstname","lastname"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAiC,OAAjC,C,CACA;;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB;AACA,QAAMC,EAAE,GAAG,CAAX;AAQA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACM,aAAD,CAAzC;AACA,SAAOH,OAAO,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADY,GAEVC,KAAK,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADO,gBAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAeD,IAAD,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACE,KADR,eACwBF,IAAI,CAACG,SAD7B,OACyCH,IAAI,CAACI,QAD9C,CADD,CADH,CALF,CAXuB,CAwBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA1CD;;AA4CA,MAAML,aAAa,GAAGP,GAAI;;;;;;;;CAA1B;AAUA,eAAeE,UAAf","sourcesContent":["/*users.jsx*/\nimport React, { Component } from \"react\";\n//You have to use the link component to link between you pages\nimport { Link } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { Query, graphql } from \"react-apollo\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst SignUpPage = () => {\n  //const id = this.props.match.params.id  ;//this.props.match.params.id;\n  const id = 1;\n  type Host = {\n    // Mistake #3: The type is wrong here, and that should be caught at compile-time\n    email: string;\n    firstname: string;\n    lastname: string;\n  };\n\n  const { loading, error, data } = useQuery(GET_ALL_HOSTS);\n  return loading ? (\n    <div>loading</div>\n  ) : error ? (\n    <div>An Error occured</div>\n  ) : (\n    <ul>\n      {data.host.map((host: Host) => (\n        <li>\n          {host.email} used by {host.firstname} {host.lastname}\n        </li>\n      ))}\n    </ul>\n  );\n  // (\n  // <Query query={query} variables={{id}} >\n  // {\n  //     (({loading, err, data}) => {\n  //         if(loading) return <div>loading</div>\n  //         return (\n  //             <div>{data.movieInfo.title}</div>\n  //         )\n  //     })\n  // }\n  // </Query>\n  // )\n  // return (\n  //   <div>\n  //     <h3> 404 Not Found!</h3>\n  //     <Link to=\"/\">Main Page</Link>\n  //   </div>\n  // );\n};\n\nconst GET_ALL_HOSTS = gql`\n  query {\n    host {\n      email\n      firstname\n      lastname\n    }\n  }\n`;\n\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}