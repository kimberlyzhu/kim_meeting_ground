{"ast":null,"code":"var _jsxFileName = \"/Users/kimberlyzhu/Documents/MeetingGround/src/pages/signup.tsx\";\n\n/*users.jsx*/\nimport React, { useState } from \"react\"; //, { Component, useState }\n//You have to use the link component to link between you pages\n\nimport gql from \"graphql-tag\"; // import { Query, graphql } from \"react-apollo\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport styled from \"@emotion/styled\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport DatePicker from \"react-datepicker\"; //yarn add react-datepicker\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport setSeconds from \"date-fns/setSeconds\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport setHours from \"date-fns/setHours\";\nimport logo from \"./img/meetingGroundLogo.png\";\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"http://localhost:4000/graphql\"\n});\nconst client = new ApolloClient({\n  cache,\n  link\n}); //const id = this.props.match.params.id  ;//this.props.match.params.id;\n\nconst urlId = {\n  urlid: \"\"\n};\nconst timeSpan = {\n  interval: 45\n};\nconst CalendarCard = styled.div`\n  margin: 0 auto;\n  width: 1000px;\n  height: 1000px;\n  align-items: center;\n  border-radius: 15px;\n`;\nconst LogoCard = styled.img`\n  width: 450px;\n  height: 100px;\n  justify-content: space-around;\n  float: left;\n`;\nconst TopFormat = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  overflow: auto;\n  display: inline-block;\n  background: white;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\nconst MainBodyFormat = styled.div`\n  margin: 0 auto;\n  align-items: center;\n  justify-content: center;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  height: 650px;\n  border-radius: 25px;\n`;\nconst temp = [];\nlet interval; // let handleChange = (date: any) => {\n//   this.setState({\n//     startDate: date,\n//   });\n// };\n\nconst SignUpPage = props => {\n  const id = props.match.params.id;\n  urlId.urlid = id;\n  const [startDate, setStartDate] = useState(setHours(setMinutes(new Date(), 30), 16));\n  const [startTime, setStartTime] = useState(setHours(setMinutes(new Date(), 30), 16)); //const [interval, setInterval] = useState(45);\n\n  const [userEmail, setUserEmail] = useState(\"\");\n\n  let handleColor = time => {\n    return time.getHours() > 12 ? \"text-success\" : \"text-error\";\n  };\n\n  let excludeTimeDictionary = {\n    \"2020-6-20\": [setSeconds(setHours(setMinutes(new Date(), 0), 17), 0), // 17:00\n    setHours(setMinutes(new Date(), 30), 18)],\n    \"2020-6-22\": [setHours(setMinutes(new Date(), 30), 19), setHours(setMinutes(new Date(), 30), 17)]\n  }; //let excludeTimeList: Date[] = [];\n\n  const [excludeTimeList, setExcludeTimeList] = useState([]);\n  const [selectTime, setSelect] = useState(false);\n\n  function handleSubmit(e) {\n    if (!selectTime) {\n      window.alert(\"Date is not selected\");\n    } else {\n      e.preventDefault(); //result contains the selected time + date\n\n      let result = new Date();\n      result.setTime(startTime.getTime()); //note time includes the month/date/year\n\n      result.setDate(startDate.getDate());\n      result.setMonth(startDate.getMonth());\n      result.setFullYear(startDate.getFullYear());\n      let main = startDate;\n      console.log(main);\n      console.log(\"result is: \" + result);\n      props.history.push(\"/submit-info/\" + id + \"/\" + result.toString()); // return <Redirect to=\"/404\" />;\n    }\n  }\n\n  function IntervalSetup() {\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_UNIQUE_LINK, {\n      variables: {\n        id: urlId.urlid\n      }\n    });\n    return loading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }, \"loading\") : error ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, \"An Error occurred: \", error) : /*#__PURE__*/React.createElement(\"body\", {\n      style: {\n        background: \"rgba(131, 196, 197)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"1rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TopFormat, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LogoCard, {\n      id: \"logo\",\n      src: logo,\n      alt: \"Meeting Ground Logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        borderTop: \"5px solid grey\",\n        margin: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        // position: \"relative\",\n        margin: 0,\n        // float: \"left\",\n        // left: \"15%\",\n        justifyContent: \"center\",\n        top: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, \"Signup Page\"))), /*#__PURE__*/React.createElement(MainBodyFormat, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        top: 10,\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, \"Sign up for your \", data.link.duration, \" minute meeting.\"), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, \"Select the date, then the time.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: startDate,\n      onChange: date => {\n        setStartDate(date);\n        let key = date.getFullYear().toString() + \"-\" + date.getMonth().toString() + \"-\" + date.getDate().toString();\n        console.log(\"mykey: \" + key); //TODO: excludetimedictionary as a hook\n\n        setExcludeTimeList(excludeTimeDictionary[key]);\n        console.log(excludeTimeList);\n        setSelect(true);\n      },\n      timeFormat: \"HH:mm\",\n      timeIntervals: data.link.duration,\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }), selectTime && /*#__PURE__*/React.createElement(DatePicker, {\n      showTimeSelect: true,\n      showTimeSelectOnly: true,\n      selected: startTime,\n      onChange: date => setStartTime(date),\n      timeFormat: \"HH:mm\",\n      timeIntervals: data.link.duration,\n      excludeTimes: excludeTimeList,\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, \"Select Date\")))))));\n  } //interval = IntervalSetup() > 0 ? IntervalSetup() : 45;\n\n\n  return /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IntervalSetup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction SignUpServer() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_UNIQUE_LINK, {\n    variables: {\n      id: urlId.urlid\n    }\n  });\n  return loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }\n  }, \"loading\") : error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }\n  }, \"An Error occurred: \", error) : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, data.link.link, \" used by \", data.link.email, \" for \", data.link.duration));\n}\n\nconst GET_UNIQUE_LINK = gql`\n  query($id: String) {\n    link(id: $id) {\n      email\n      duration\n      link\n    }\n  }\n`;\nexport default SignUpPage;","map":{"version":3,"sources":["/Users/kimberlyzhu/Documents/MeetingGround/src/pages/signup.tsx"],"names":["React","useState","gql","useQuery","ApolloClient","InMemoryCache","HttpLink","ApolloProvider","styled","DatePicker","setSeconds","setMinutes","setHours","logo","cache","link","uri","client","urlId","urlid","timeSpan","interval","CalendarCard","div","LogoCard","img","TopFormat","MainBodyFormat","temp","SignUpPage","props","id","match","params","startDate","setStartDate","Date","startTime","setStartTime","userEmail","setUserEmail","handleColor","time","getHours","excludeTimeDictionary","excludeTimeList","setExcludeTimeList","selectTime","setSelect","handleSubmit","e","window","alert","preventDefault","result","setTime","getTime","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","main","console","log","history","push","toString","IntervalSetup","loading","error","data","GET_UNIQUE_LINK","variables","background","padding","justifyContent","alignContent","display","flexDirection","borderTop","margin","top","duration","date","key","SignUpServer","email"],"mappings":"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","sourcesContent":["/*users.jsx*/\nimport React, { useState, useEffect } from \"react\"; //, { Component, useState }\n//You have to use the link component to link between you pages\nimport { RouteComponentProps } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\n// import { Query, graphql } from \"react-apollo\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache, NormalizedCacheObject } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport MyCalendar from \"./Moment\";\nimport styled from \"@emotion/styled\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nimport DatePicker from \"react-datepicker\";\n//yarn add react-datepicker\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport setSeconds from \"date-fns/setSeconds\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport setHours from \"date-fns/setHours\";\n\nimport logo from \"./img/meetingGroundLogo.png\";\n\nimport Redirect, { withRouter } from \"react-router-dom\";\ninterface SignUpPagePropsInterface extends RouteComponentProps<{ id: string }> {\n  // Other props that belong to component it self not Router\n}\n\nconst cache = new InMemoryCache();\n\nconst link = new HttpLink({\n  uri: \"http://localhost:4000/graphql\",\n});\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link,\n});\n\n//const id = this.props.match.params.id  ;//this.props.match.params.id;\ntype Host = {\n  // Mistake #3: The type is wrong here, and that should be caught at compile-time\n  email: string;\n  firstname: string;\n  lastname: string;\n};\n\ntype Link = {\n  link: string;\n  duration: number;\n  email: string;\n};\n\nconst urlId: {\n  urlid: string;\n} = {\n  urlid: \"\",\n};\n\nconst timeSpan: {\n  interval: number;\n} = {\n  interval: 45,\n};\n\nconst CalendarCard = styled.div`\n  margin: 0 auto;\n  width: 1000px;\n  height: 1000px;\n  align-items: center;\n  border-radius: 15px;\n`;\n\nconst LogoCard = styled.img`\n  width: 450px;\n  height: 100px;\n  justify-content: space-around;\n  float: left;\n`;\n\nconst TopFormat = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  overflow: auto;\n  display: inline-block;\n  background: white;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nconst MainBodyFormat = styled.div`\n  margin: 0 auto;\n  align-items: center;\n  justify-content: center;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  height: 650px;\n  border-radius: 25px;\n`;\n\nconst temp: any[] = [];\nlet interval: number;\n\n// let handleChange = (date: any) => {\n//   this.setState({\n//     startDate: date,\n//   });\n// };\n\nconst SignUpPage: React.FC<SignUpPagePropsInterface> = (\n  props: SignUpPagePropsInterface\n) => {\n  const id = props.match.params.id;\n  urlId.urlid = id;\n\n  const [startDate, setStartDate] = useState<Date>(\n    setHours(setMinutes(new Date(), 30), 16)\n  );\n\n  const [startTime, setStartTime] = useState<Date>(\n    setHours(setMinutes(new Date(), 30), 16)\n  );\n  //const [interval, setInterval] = useState(45);\n  const [userEmail, setUserEmail] = useState(\"\");\n\n  let handleColor = (time: any) => {\n    return time.getHours() > 12 ? \"text-success\" : \"text-error\";\n  };\n\n  let excludeTimeDictionary: { [dateID: string]: Date[] } = {\n    \"2020-6-20\": [\n      setSeconds(setHours(setMinutes(new Date(), 0), 17), 0), // 17:00\n      setHours(setMinutes(new Date(), 30), 18),\n    ],\n    \"2020-6-22\": [\n      setHours(setMinutes(new Date(), 30), 19),\n      setHours(setMinutes(new Date(), 30), 17),\n    ],\n  };\n  //let excludeTimeList: Date[] = [];\n  const [excludeTimeList, setExcludeTimeList] = useState<Date[]>([]);\n\n  const [selectTime, setSelect] = useState(false);\n  function handleSubmit(e: any) {\n    if (!selectTime) {\n      window.alert(\"Date is not selected\");\n    } else {\n      e.preventDefault();\n\n      //result contains the selected time + date\n      let result = new Date();\n\n      result.setTime(startTime.getTime()); //note time includes the month/date/year\n      result.setDate(startDate.getDate());\n      result.setMonth(startDate.getMonth());\n      result.setFullYear(startDate.getFullYear());\n\n      let main = startDate;\n      console.log(main);\n\n      console.log(\"result is: \" + result);\n\n      props.history.push(\"/submit-info/\" + id + \"/\" + result.toString());\n      // return <Redirect to=\"/404\" />;\n    }\n  }\n\n  function IntervalSetup() {\n    const { loading, error, data } = useQuery(GET_UNIQUE_LINK, {\n      variables: { id: urlId.urlid },\n    });\n\n    return loading ? (\n      <div>loading</div>\n    ) : error ? (\n      <div>An Error occurred: {error}</div>\n    ) : (\n      <body style={{ background: \"rgba(131, 196, 197)\" }}>\n        <div style={{ padding: \"1rem\" }}>\n          <TopFormat>\n            <LogoCard id=\"logo\" src={logo} alt=\"Meeting Ground Logo\" />\n            <div\n              style={{\n                justifyContent: \"center\",\n                alignContent: \"center\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                borderTop: \"5px solid grey\",\n                margin: 5,\n              }}\n            >\n              <h1\n                style={{\n                  // position: \"relative\",\n                  margin: 0,\n                  // float: \"left\",\n                  // left: \"15%\",\n                  justifyContent: \"center\",\n                  top: 20,\n                }}\n              >\n                Signup Page\n              </h1>\n            </div>\n          </TopFormat>\n\n          <MainBodyFormat>\n            <h1 style={{ top: 10, margin: 20 }}>\n              Sign up for your {data.link.duration} minute meeting.\n            </h1>\n            <h2 style={{ margin: 20 }}>Select the date, then the time.</h2>\n            <div className=\"form-group\">\n              <form onSubmit={handleSubmit}>\n                <div\n                  className=\"form-group\"\n                  style={{ display: \"flex\", flexDirection: \"row\" }}\n                >\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(date: Date) => {\n                      setStartDate(date);\n                      let key =\n                        date.getFullYear().toString() +\n                        \"-\" +\n                        date.getMonth().toString() +\n                        \"-\" +\n                        date.getDate().toString();\n                      console.log(\"mykey: \" + key);\n                      //TODO: excludetimedictionary as a hook\n                      setExcludeTimeList(excludeTimeDictionary[key]);\n                      console.log(excludeTimeList);\n                      setSelect(true);\n                    }}\n                    timeFormat=\"HH:mm\"\n                    timeIntervals={data.link.duration}\n                    inline\n                  />\n                  {selectTime && (\n                    <DatePicker\n                      showTimeSelect\n                      showTimeSelectOnly\n                      selected={startTime}\n                      onChange={(date: Date) => setStartTime(date)}\n                      timeFormat=\"HH:mm\"\n                      timeIntervals={data.link.duration}\n                      excludeTimes={excludeTimeList}\n                      inline\n                    />\n                  )}\n                </div>\n                <div\n                  className=\"form-group\"\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\n                >\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Select Date\n                  </button>\n                </div>\n              </form>\n            </div>\n          </MainBodyFormat>\n        </div>\n      </body>\n    );\n  }\n\n  //interval = IntervalSetup() > 0 ? IntervalSetup() : 45;\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <SignUpServer /> */}\n\n      <IntervalSetup />\n\n      {/* <CalendarCard>\n        <IntervalSetup />\n      </CalendarCard> */}\n      {/* <CalendarCard>\n        <MyCalendar myList={temp} />\n      </CalendarCard> */}\n    </ApolloProvider>\n  );\n};\n\nfunction SignUpServer() {\n  const { loading, error, data } = useQuery(GET_UNIQUE_LINK, {\n    variables: { id: urlId.urlid },\n  });\n  return loading ? (\n    <div>loading</div>\n  ) : error ? (\n    <div>An Error occurred: {error}</div>\n  ) : (\n    <ul>\n      <li>\n        {data.link.link} used by {data.link.email} for {data.link.duration}\n      </li>\n    </ul>\n  );\n}\n\nconst GET_UNIQUE_LINK = gql`\n  query($id: String) {\n    link(id: $id) {\n      email\n      duration\n      link\n    }\n  }\n`;\n\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}