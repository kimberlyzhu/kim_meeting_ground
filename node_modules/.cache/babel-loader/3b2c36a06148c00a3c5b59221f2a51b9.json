{"ast":null,"code":"var _jsxFileName = \"/Users/kimberlyzhu/Documents/MeetingGround/src/pages/submitInfo.tsx\";\n\n/*users.jsx*/\nimport { useForm } from \"react-hook-form\";\n//You have to use the link component to link between you pages\nimport styled from \"@emotion/styled\";\nimport logo from \"./img/meetingGroundLogo.png\";\nimport React from \"react\"; // yarn add react-hook-form\n//You have to use the link component to link between you pages\n\nimport { useMutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst LogoCard = styled.img`\n  width: 450px;\n  height: 100px;\n  justify-content: space-around;\n  float: left;\n`;\nconst TopFormat = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  overflow: auto;\n  display: inline-block;\n  background: white;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\nconst MainBodyFormat = styled.div`\n  margin: 0 auto;\n  align-items: center;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  height: 650px;\n  border-radius: 25px;\n`;\nconst Inputformat = styled.input`\n  width: 100%;\n  padding: 10px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\nconst meetingInfo = {\n  hostEmail: \"\",\n  duration: 0\n};\nconst urlId = {\n  urlid: \"\"\n};\nconst createEvent = gql`\n  mutation(\n    $url: String!\n    $email: String!\n    $username: String!\n    $comment: String!\n    $startTime: String!\n  ) {\n    create_event(\n      url: $url\n      email: $email\n      username: $username\n      comment: $comment\n      startTime: $startTime\n    ) {\n      state\n    }\n  }\n`;\n\nconst SubmitInfoPage = props => {\n  const id = props.match.params.id; //link id\n\n  const scheduledDate = new Date(props.match.params.time.replace(\"%20\", \"\"));\n  urlId.urlid = id;\n  const [mutate] = useMutation(createEvent);\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      comments: \"\"\n    }\n  });\n  const clientEmail = {\n    email: \"\"\n  };\n\n  async function inviteTo(data) {\n    let myComment = data.comment !== undefined ? data.comment : \" \";\n    const arg = await mutate({\n      variables: {\n        url: urlId.urlid,\n        email: data.email,\n        username: data.firstName + \" \" + data.lastName,\n        comment: myComment,\n        startTime: scheduledDate.toString()\n      }\n    });\n  }\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log(data.firstName);\n    console.log(data.email);\n    clientEmail.email = data.email;\n\n    if (!/^[a-zA-Z0-9]+[a-zA-Z0-9_.]*@[a-zA-Z0-9]+.[A-Za-z]+$/.test(data.email)) {\n      window.alert(\"invalid email\");\n    } else {\n      inviteTo(data);\n      props.history.push(\"/confirmation\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"body\", {\n    style: {\n      background: \"rgba(131, 196, 197)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TopFormat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LogoCard, {\n    id: \"logo\",\n    src: logo,\n    alt: \"Meeting Ground Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      borderTop: \"5px solid grey\",\n      margin: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      margin: 0,\n      justifyContent: \"center\",\n      top: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Submit Info Page\"))), /*#__PURE__*/React.createElement(MainBodyFormat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \" \", \"Your scheduled date is \", scheduledDate.toString()), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \" \", \"Please input your information below to confirm your meeting.\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"First Name\", /*#__PURE__*/React.createElement(Inputformat, {\n    name: \"firstName\",\n    id: \"firstName\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Last Name\", /*#__PURE__*/React.createElement(Inputformat, {\n    name: \"lastName\",\n    id: \"lastName\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Inputformat, {\n    name: \"email\",\n    id: \"email\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Comments/Questions?\"), /*#__PURE__*/React.createElement(Inputformat, {\n    name: \"comments\",\n    id: \"comments\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, \"Submit Info\")))), /*#__PURE__*/React.createElement(\"pre\", {\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SubmitInfoPage;","map":{"version":3,"sources":["/Users/kimberlyzhu/Documents/MeetingGround/src/pages/submitInfo.tsx"],"names":["useForm","styled","logo","React","useMutation","gql","LogoCard","img","TopFormat","div","MainBodyFormat","Inputformat","input","meetingInfo","hostEmail","duration","urlId","urlid","createEvent","SubmitInfoPage","props","id","match","params","scheduledDate","Date","time","replace","mutate","register","handleSubmit","defaultValues","firstName","lastName","email","comments","clientEmail","inviteTo","data","myComment","comment","undefined","arg","variables","url","username","startTime","toString","onSubmit","console","log","test","window","alert","history","push","background","padding","justifyContent","alignContent","display","flexDirection","borderTop","margin","top"],"mappings":"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","sourcesContent":["/*users.jsx*/\nimport { useForm } from \"react-hook-form\";\nimport { RouteComponentProps } from \"react-router-dom\";\n//You have to use the link component to link between you pages\nimport styled from \"@emotion/styled\";\nimport logo from \"./img/meetingGroundLogo.png\";\nimport React, { useState } from \"react\";\n// yarn add react-hook-form\n//You have to use the link component to link between you pages\nimport { useMutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\ninterface SubmitPagePropsInterface\n  extends RouteComponentProps<{ id: string; time: string }> {\n  // Other props that belong to component it self not Router\n}\nconst LogoCard = styled.img`\n  width: 450px;\n  height: 100px;\n  justify-content: space-around;\n  float: left;\n`;\n\nconst TopFormat = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  overflow: auto;\n  display: inline-block;\n  background: white;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nconst MainBodyFormat = styled.div`\n  margin: 0 auto;\n  align-items: center;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  height: 650px;\n  border-radius: 25px;\n`;\n\nconst Inputformat = styled.input`\n  width: 100%;\n  padding: 10px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nconst meetingInfo: {\n  hostEmail: string;\n  duration: number;\n} = {\n  hostEmail: \"\",\n  duration: 0,\n};\n\nconst urlId: {\n  urlid: string;\n} = {\n  urlid: \"\",\n};\nconst createEvent = gql`\n  mutation(\n    $url: String!\n    $email: String!\n    $username: String!\n    $comment: String!\n    $startTime: String!\n  ) {\n    create_event(\n      url: $url\n      email: $email\n      username: $username\n      comment: $comment\n      startTime: $startTime\n    ) {\n      state\n    }\n  }\n`;\n\nconst SubmitInfoPage: React.FC<SubmitPagePropsInterface> = (\n  props: SubmitPagePropsInterface\n) => {\n  const id = props.match.params.id; //link id\n  const scheduledDate = new Date(props.match.params.time.replace(\"%20\", \"\"));\n  urlId.urlid = id;\n\n  const [mutate] = useMutation(createEvent);\n\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      comments: \"\",\n    },\n  });\n\n  const clientEmail: {\n    email: string;\n  } = {\n    email: \"\",\n  };\n\n  async function inviteTo(data: any) {\n    let myComment = data.comment !== undefined ? data.comment : \" \";\n    const arg = await mutate({\n      variables: {\n        url: urlId.urlid,\n        email: data.email,\n        username: data.firstName + \" \" + data.lastName,\n        comment: myComment,\n        startTime: scheduledDate.toString(),\n      },\n    });\n  }\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n    console.log(data.firstName);\n    console.log(data.email);\n    clientEmail.email = data.email;\n    if (\n      !/^[a-zA-Z0-9]+[a-zA-Z0-9_.]*@[a-zA-Z0-9]+.[A-Za-z]+$/.test(data.email)\n    ) {\n      window.alert(\"invalid email\");\n    } else {\n      inviteTo(data);\n      props.history.push(\"/confirmation\");\n    }\n  };\n\n  return (\n    <body style={{ background: \"rgba(131, 196, 197)\" }}>\n      <div style={{ padding: \"1rem\" }}>\n        <TopFormat>\n          <LogoCard id=\"logo\" src={logo} alt=\"Meeting Ground Logo\" />\n\n          <div\n            style={{\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              borderTop: \"5px solid grey\",\n              margin: 5,\n            }}\n          >\n            <h1\n              style={{\n                margin: 0,\n                justifyContent: \"center\",\n                top: 20,\n              }}\n            >\n              Submit Info Page\n            </h1>\n          </div>\n        </TopFormat>\n        <MainBodyFormat>\n          <h3 style={{ margin: 20 }}>\n            {\" \"}\n            Your scheduled date is {scheduledDate.toString()}\n          </h3>\n          <h4 style={{ margin: 20 }}>\n            {\" \"}\n            Please input your information below to confirm your meeting.\n          </h4>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <label htmlFor=\"firstName\">\n                First Name\n                <Inputformat name=\"firstName\" id=\"firstName\" ref={register} />\n              </label>\n\n              <label htmlFor=\"lastName\">\n                Last Name\n                <Inputformat name=\"lastName\" id=\"lastName\" ref={register} />\n              </label>\n            </div>\n\n            <div>\n              <label htmlFor=\"email\">Email Address</label>\n              <Inputformat name=\"email\" id=\"email\" ref={register} />\n            </div>\n\n            <div>\n              <label htmlFor=\"comments\">Comments/Questions?</label>\n              <Inputformat name=\"comments\" id=\"comments\" ref={register} />\n            </div>\n\n            <div\n              className=\"form-group\"\n              style={{ display: \"flex\", flexDirection: \"column\" }}\n            >\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit Info\n              </button>\n            </div>\n          </form>\n        </MainBodyFormat>\n        {/* {true && (\n          // <ApolloProvider client={client}>\n          // <GetHostEmail />\n          // </ApolloProvider>\n        )} */}\n        <pre id=\"content\"></pre>\n      </div>\n    </body>\n  );\n};\n\nexport default SubmitInfoPage;\n"]},"metadata":{},"sourceType":"module"}