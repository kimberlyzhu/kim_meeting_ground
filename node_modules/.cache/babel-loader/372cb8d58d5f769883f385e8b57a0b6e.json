{"ast":null,"code":"var _jsxFileName = \"/Users/benajasandrain/codeLabs/meetingground/mg-app/src/pages/signup.tsx\";\n\n/*SignUpPage.jsx*/\nimport React, { Component } from \"react\"; //You have to use the link component to link between you pages\n//import gql from \"graphql-tag\";\n\n// yarn add apollo-client\n// npm install apollo-client --save\n//import HostList from \"../graphql/server/hostlist\";\n// apollo client setup\n// const client = new ApolloClient({\n//   uri: \"http://localhost:4000/graphql\",\n// });\nclass SignUpPage extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \" Sign up page!\")); // const id = this.props.match.params.id;\n    // return (\n    //   <ApolloProvider client={client}>\n    //     <div>\n    //       <h1>Host List</h1>\n    //       <HostList />\n    //     </div>\n    //   </ApolloProvider>\n    //   //   <Query query={query} variables={{ id }}>\n    //   //     {({ loading, err, data }) => {\n    //   //       if (loading) return <div>loading</div>;\n    //   //       return <div>{data.links.email}</div>;\n    //   //     }}\n    //   //   </Query>\n    // );\n  }\n\n} // const query = gql`\n//   query LinkInfo($id: string) {\n//     links(link: $id) {\n//       email\n//     }\n//   }\n// `;\n\n\nexport default SignUpPage;","map":{"version":3,"sources":["/Users/benajasandrain/codeLabs/meetingground/mg-app/src/pages/signup.tsx"],"names":["React","Component","SignUpPage","render"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AAOA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AACjCE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CADO,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAvBgC,C,CA0BnC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,UAAf","sourcesContent":["/*SignUpPage.jsx*/\nimport React, { Component } from \"react\";\n//You have to use the link component to link between you pages\n//import gql from \"graphql-tag\";\nimport { Query, graphql } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\n//npm install apollo-boost react-apollo graphql --save\nimport { Link } from \"react-router-dom\";\n// yarn add apollo-client\n// npm install apollo-client --save\n\n//import HostList from \"../graphql/server/hostlist\";\n\n// apollo client setup\n// const client = new ApolloClient({\n//   uri: \"http://localhost:4000/graphql\",\n// });\n\nclass SignUpPage extends Component {\n  render() {\n    return (\n      <div>\n        <h3> Sign up page!</h3>\n        {/* <Link to=\"/\">Main Page</Link> */}\n      </div>\n    );\n    // const id = this.props.match.params.id;\n    // return (\n    //   <ApolloProvider client={client}>\n    //     <div>\n    //       <h1>Host List</h1>\n    //       <HostList />\n    //     </div>\n    //   </ApolloProvider>\n    //   //   <Query query={query} variables={{ id }}>\n    //   //     {({ loading, err, data }) => {\n    //   //       if (loading) return <div>loading</div>;\n    //   //       return <div>{data.links.email}</div>;\n    //   //     }}\n    //   //   </Query>\n    // );\n  }\n}\n\n// const query = gql`\n//   query LinkInfo($id: string) {\n//     links(link: $id) {\n//       email\n//     }\n//   }\n// `;\n\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}